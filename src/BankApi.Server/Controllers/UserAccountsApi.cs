/*
 * BankApi
 *
 * Developer challenge using Swagger and ASP.NET Core
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using BankApi.Logic.Data.Repositories;
using BankApi.Server.Models;
using IO.Swagger.Server.Attributes;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.AspNetCore.SwaggerGen;

namespace BankApi.Server.Controllers
{
    /// <summary>
    ///     Provides API endpoints for the /users/{user_id}/accounts route
    /// </summary>
    public class UserAccountsApiController : Controller
    {
        private readonly IBankAccountRepository _accountRepository;
        private readonly IUserRepository _userRepository;

        public UserAccountsApiController(IUserRepository userRepository, IBankAccountRepository accountRepository)
        {
            _userRepository = userRepository;
            _accountRepository = accountRepository;
        }

        /// <summary>
        ///     Adds a new bank account to a user
        /// </summary>
        /// <param name="user_id">Id of the user who owns the bank account</param>
        /// <param name="accountData"></param>
        /// <response code="200">Successfully added bank account</response>
        /// <response code="400">New account data invalid</response>
        /// <response code="404">Bank account not found</response>
        [HttpPost]
        [Route("/api/v1/users/{user_id}/accounts")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1UsersAddAccount")]
        [SwaggerResponse(200, typeof(AccountOverviewViewModel), "Successfully added bank account")]
        [SwaggerResponse(400, typeof(ErrorViewModel), "New account data invalid")]
        [SwaggerResponse(404, typeof(ErrorViewModel), "Bank account not found")]
        public virtual IActionResult ApiV1UsersAddAccount(
            [FromRoute] [Required] int? user_id,
            [FromBody] AddAccountViewModel accountData
        )
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountOverviewViewModel));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorViewModel));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorViewModel));

            string exampleJson = null;
            exampleJson =
                "{\r\n  \"account_id\" : 1,\r\n  \"bank_id\" : \"BizfiBank\",\r\n  \"account_number\" : \"00112233\"\r\n}";

            var example = exampleJson != null
                ? JsonConvert.DeserializeObject<AccountOverviewViewModel>(exampleJson)
                : default(AccountOverviewViewModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        ///     Gets a list of bank accounts owned by a user
        /// </summary>
        /// <param name="user_id">Id of the user to fetch bank accounts for</param>
        /// <response code="200">Successfully retrieved list of bank accounts for user</response>
        /// <response code="404">User not found</response>
        [HttpGet]
        [Route("/api/v1/users/{user_id}/accounts")]
        [ValidateModelState]
        [SwaggerOperation("ApiV1UsersGetAccountsByUserId")]
        [SwaggerResponse(200, typeof(List<AccountOverviewViewModel>),
            "Successfully retrieved list of bank accounts for user")]
        [SwaggerResponse(404, typeof(ErrorViewModel), "User not found")]
        public virtual IActionResult ApiV1UsersGetAccountsByUserId(
            [FromRoute] [Required] int? user_id
        )
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountOverviewViewModel>));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorViewModel));

            string exampleJson = null;
            exampleJson =
                "[ {\r\n  \"account_id\" : 1,\r\n  \"bank_id\" : \"BizfiBank\",\r\n  \"account_number\" : \"00112233\"\r\n}, {\r\n  \"account_id\" : 2,\r\n  \"bank_id\" : \"FairWayBank\",\r\n  \"account_number\" : \"01020304\"\r\n} ]";

            var example = exampleJson != null
                ? JsonConvert.DeserializeObject<List<AccountOverviewViewModel>>(exampleJson)
                : default(List<AccountOverviewViewModel>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}